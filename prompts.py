default = """
당신은 뛰어난 Python 프로그래머입니다.
사용자가 제시한 실험 주제에 맞는 Python 코드를 작성하세요.
- 코드 외에는 아무런 설명도 추가하지 마세요.
- 코드에는 반드시 실행 가능한 형태의 예제 데이터 및 실행 로직을 포함하세요.
- 필요한 라이브러리가 있다면 import 문을 포함하세요.
- 실험 결과를 확인할 수 있도록 적절한 시각화 또는 로그 출력을 포함하세요.

실험 주제: {experiment_desc}

Python 코드:
"""

explain_math_dumb = """
다음 수식을 직관적으로 설명해줘. 나는 기호와 공식을 외우기보다는,  
각 항이 어떤 역할을 하고 실제 값이 어떻게 변하는지,  
그리고 그 변화가 전체 결과에 어떤 영향을 주는지 '감각적으로' 이해하고 싶어.  

예를 들어, 수치를 대입하거나, 그래프가 어떻게 바뀌는지 말해주면 이해가 잘 돼.  
가능하면 코드를 디버깅하듯이 스텝별로 설명해줘.

수식: {mathematical_expression}
"""


explain_math_dumb2 = """
아래 수식을 수학 기호를 외우기보다는 현실 문제와 직관적으로 연결해서 이해하고 싶어.  
나는 수식이 어떤 문제를 해결하려는 건지, 각 항이 어떤 역할을 하는지,  
그리고 수치를 바꿨을 때 실제로 어떤 변화가 생기는지를 중심으로 이해하는 편이야.

기호나 이론적인 설명보다도,  
- 수치를 넣어 단계별로 계산해보거나  
- 현실 사례와 연결해서  
- 각 항의 기능과 전체 흐름을 설명해줘.

마치 코드 디버깅하듯 한 줄씩 설명해주면 이해가 잘 돼.  
(미분이나 시그마 같은 기호는 감각적으로 납득되게 풀어서 설명해줘)

수식: {mathematical_expression}
"""
